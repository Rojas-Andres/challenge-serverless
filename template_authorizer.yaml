AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: Stack Microservices

Parameters:
  Environment:
    Description: Environment in which the resources will be deploy
    Type: String
    Default: development
  LayerDependencies:
    Description: Layer Dependencies
    Type: String
  DynamoTableName:
    Description: Dynamo Table name
    Type: String
  LambdasSecurityGroup:
    Description: Security Group
    Type: String
  SecretKey:
    Description: Secret Key
    Type: String
  GlobalTimeout:
    Description: Global timeout
    Type: String
  StackNameChallenge:
    Description: stack Name
    Type: String
    Default: challenge-stack-name
Globals:
  Function:
    Timeout: !Ref GlobalTimeout
    Tracing: Active
    MemorySize: 256
    Handler: app.handler
    Runtime: python3.9
    Architectures:
      - x86_64
    Environment:
      Variables:
        ENVIRONMENT: !Ref Environment
        SECRET_KEY: !Ref SecretKey

Resources:
  AuthorizerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: modules/authorizer
      FunctionName: !Sub authorizer-${StackNameChallenge}-${Environment}
      Description: !Sub Authorizer microservice «${Environment}»
      Layers:
        - !Ref LayerDependencies
      Environment:
        Variables:
          FUNCTION_NAME: !Sub auth-${StackNameChallenge}-${Environment}
          AUTHORIZER_TABLE: !Ref DynamoTableName
      Policies:
        - AmazonDynamoDBFullAccess

Outputs:
  AuthorizerArn:
    Value: !GetAtt AuthorizerFunction.Arn
    Export:
      Name: !Sub "${StackNameChallenge}-AuthoArn"
  AuthorizerFunction:
    Value: !Ref AuthorizerFunction
    Export:
      Name: !Sub "${StackNameChallenge}-AuthoFun"